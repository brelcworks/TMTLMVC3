@model MVCINCV4._1.TABLE1

@{
    ViewBag.Title = "EDIT ITEM";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}
@section scripts
{
    <script type="text/javascript">
        $(function () {
            $("#txtPtno").autocomplete({
                source: '@Url.Action("GetPtno")'
            });
            $("#txtParti").autocomplete({
                source: '@Url.Action("GetParti")'
            });

            $("#txtParti").keypress(function (e) {
                if (e.keyCode == 13) {
                    $.ajax({
                        type: "GET",
                        url: "@Url.Action("gdata1","Stock")",
                        data: { aData: $("#txtParti").val() },
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (data) {
                            $.each(data, function (i, val) {
                                $('#txtPtno').val(val.PART_NO)
                                $('#txtUNIT').val(val.unit)
                                $('#txtMRP').val(val.MRP)
                                $('#txtGROP').val(val.GROP)
                                $('#txtTYPE').val(val.CATE)
                                $('#txtTAX').val(val.TRATE)
                                $('#txtPPRICE').focus()
                                $('#txtSPRICE').val(parseFloat($('#txtMRP').val()) / parseFloat($('#txtTAX').val()) * 100)
                                $('#txtTVAL').val(parseFloat($('#txtSPRICE').val()) * parseFloat($('#txtTAX').val()) / 100)
                                $("#txtSPRICE").number(true, 2);
                                $('#txtTVAL').number(true, 2);
                            });
                        },
                        error: function OnErrorCall(response) {
                            alert(response.status + " " + response.statusText);
                        }
                    });
                    e.preventDefault();
                }
            });

            $("#txtPtno").keypress(function (e) {
                if (e.keyCode == 13) {
                    $.ajax({
                        type: "GET",
                        url: "@Url.Action("gdata2","Stock")",
                        data: { aData: $("#txtPtno").val() },
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (data) {
                            $.each(data, function (i, val) {
                                $('#txtParti').val(val.PARTI)
                                $('#txtUNIT').val(val.unit)
                                $('#txtMRP').val(val.MRP)
                                $('#txtGROP').val(val.GROP)
                                $('#txtTYPE').val(val.CATE)
                                $('#txtTAX').val(val.TRATE)
                                $('#txtPPRICE').focus()
                                var tax = parseFloat($('#txtTAX').val()) + 100
                                var spr = parseFloat($('#txtMRP').val()) / tax * 100
                                $('#txtSPRICE').val(spr.toFixed(2))
                                var tval = parseFloat($('#txtSPRICE').val()) * parseFloat($('#txtTAX').val()) / 100
                                $('#txtTVAL').val(tval.toFixed(2))
                            });
                        },
                        error: function OnErrorCall(response) {
                            alert(response.status + " " + response.statusText);
                        }
                    });
                    e.preventDefault();
                }
            });

            $(document).ready(function () {
                $('INPUT[type="text"]').focus(function () {
                    $(this).addClass("focus");
                });

                $('INPUT[type="text"]').blur(function () {
                    $(this).removeClass("focus");
                });
            });


            $('#txtPPRICE').keypress(function (e) {
                if (e.keyCode == 13) {
                    $('#txtLMODI').val(new Date($.now()))
                    $('#txtSSTA').val("NEW")
                    $('#txtAEDT').val("NEW")
                    $('#txtRID').val(new Date($.now()))
                    $('#txtUSER').val('@HttpContext.Current.User.Identity.Name.ToString()')
                    $('#txtQTY').focus()
                    e.preventDefault();
                }
            });

            $('#txtQTY').keypress(function (e) {
                if (e.keyCode == 13) {
                    var tot = parseFloat($('#txtMRP').val()) * parseFloat($('#txtQTY').val())
                    var tot1 = parseFloat($('#txtSPRICE').val()) * parseFloat($('#txtQTY').val())
                    $('#txtTOTAL').val(tot.toFixed(2))
                    $('#txtSTOT').val(tot1.toFixed(2))
                    $('#txtRCNO').focus()
                    e.preventDefault();
                }
            });

            $('#txtRCNO').keypress(function (e) {
                if (e.keyCode == 13) {
                    $('#txtDPCODE').val("A1587")
                    $('#txtEOR').focus()
                    e.preventDefault();
                }
            });
        });

    </script>
}
<style type="text/css">
    .focus {
        border: 2px solid red;
        background-color: #FEFED5;
    }
</style>


    @Scripts.Render("~/bundles/jqueryval")

    @using (Html.BeginForm())
    {
    @Html.AntiForgeryToken()

        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.RID1)
    <fieldset>
        <table class="table table-bordered table-hover table-responsive" style="font-size : smaller">
            <tr>
                <td>
                    @Html.LabelFor(model => model.RID)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.RID, new { @class = "form-control", @id = "txtRID", @placeholder = "RECORD NO" })
                </td>
                <td>
                    @Html.LabelFor(model => model.STOTAL)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.STOTAL, new { @class = "form-control", @id = "txtSTOT", @placeholder = "SELL PRICE TOTAL" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.PART_NO)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.PART_NO, new { @class = "form-control", @id = "txtPtno", @placeholder = "PART NO" })
                    @Html.ValidationMessageFor(model => model.PART_NO, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.LabelFor(model => model.TVAL)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.TVAL, new { @class = "form-control", @id = "txtTVAL", @placeholder = "TAX VALUE" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.PARTI)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.PARTI, new { @class = "form-control", @id = "txtParti", @placeholder = "PART NAME" })
                    @Html.ValidationMessageFor(model => model.PARTI, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.LabelFor(model => model.TYPE)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.TYPE, new { @class = "form-control", @id = "txtTYPE", @placeholder = "ITEM TYPE" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.MRP)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.MRP, new { @class = "form-control", @id = "txtMRP", @placeholder = "MRP" })
                </td>
                <td>
                    @Html.LabelFor(model => model.UNIT)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.UNIT, new { @class = "form-control", @id = "txtUNIT", @placeholder = "UNIT" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.TAX)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.TAX, new { @class = "form-control", @id = "txtTAX", @placeholder = "TAX RATE" })
                </td>
                <td>
                    @Html.LabelFor(model => model.RACKNO)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.RACKNO, new { @class = "form-control", @id = "txtRCNO", @placeholder = "RACK NO" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.SPRICE)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.SPRICE, new { @class = "form-control", @id = "txtSPRICE", @placeholder = "SELL PRICE" })
                </td>

                <td>
                    @Html.LabelFor(model => model.EOR)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.EOR, new { @class = "form-control", @id = "txtEOR", @placeholder = "ITEM E.O.R" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.PPRICE)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.PPRICE, new { @class = "form-control", @id = "txtPPRICE", @placeholder = "PURCHASE PRICE" })
                </td>
                <td>
                    @Html.LabelFor(model => model.grop)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.grop, new { @class = "form-control", @id = "txtGROP", @placeholder = "ITEM GROUP" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.QTY)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.QTY, new { @class = "form-control", @id = "txtQTY", @placeholder = "QUANTITY" })
                    @Html.ValidationMessageFor(model => model.QTY, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.LabelFor(model => model.DPCODE)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.DPCODE, new { @class = "form-control", @id = "txtDPCODE", @placeholder = "DEALER CODE" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.TOTAL)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.TOTAL, new { @class = "form-control", @id = "txtTOTAL", @placeholder = "ITEM TOTAL" })
                </td>
                <td>
                    @Html.LabelFor(model => model.USER1)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.USER1, new { @class = "form-control", @id = "txtUSER", @placeholder = "USER NAME" })
                </td>
            </tr>
            <tr>
                <td colspan="4">
                    @Html.HiddenFor(model => model.lmodi, new { @id = "txtLMODI" })
                    @Html.HiddenFor(model => model.SSTA, new { @id = "txtSSTA" })
                    @Html.HiddenFor(model => model.AEDT, new { @id = "txtAEDT" })
                </td>
            </tr>
        </table>
        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
    }

    <div>
        @Html.ActionLink("Back to List", "List")
    </div>

