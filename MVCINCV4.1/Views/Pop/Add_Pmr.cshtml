@model MVCINCV4._1.Models.PMRMODEL

@{
    ViewBag.Title = "ADD NEW SERVICE ISSUE";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}
@section scripts
{
<script type="text/javascript">
    $(function () {
        $(document).ready(function () {
            $('INPUT[type="text"]').focus(function () {
                $(this).addClass("focus");
            });

            $('INPUT[type="text"]').blur(function () {
                $(this).removeClass("focus");
            });

            
            $.ajax({
                type: "GET",
                url: "@Url.Action("gdata2","Pop")",
                data: { aData: $("#txtPOPENS").val() },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                $.each(data, function (i, val) {
                    $('#txtSNAME').val(val.SNAME)
                    $('#txtSID').val(val.SID)
                    $('#txtENS').val(val.ENS)
                    $('#txtRID').val(new Date($.now()))
                    $('#txtDGNO').val(val.DGNO)
                    $('#txtKVA').val(val.RAT_PH)
                    $('#txtMODEL').val(val.MODEL)
                    $('#txtAMAKE').val(val.AMAKE)
                    $('#txtALSN').val(val.ALSN)
                    $('#txtBSN').val(val.BSN)
                    $('#txtDIST').val(val.DIST)
                    $('#txtSTATE').val(val.STATE)
                    $('#txtCUST').val(val.CNAME)
                    $('#txtDOI').val($('#txtPOPDOC').val())
                    $('#txtWARR').val(val.WARR)
                    $('#txtOEA').val(val.OEA)
                    $('#txtAMC').val(val.AMC)
                    $('#txtAEDT').val("NEW")
                    $('#txtSSTA').val("NEW")
                    $('#txtLMODI').val(new Date($.now()))
                    $('#txtPOPAEDT').val("NEW")
                    $('#txtPOPSSTA').val("MOD")
                    $('#txtPOPLMODI').val(new Date($.now()))
                    $('#txtDOS').focus()
                });
            },
            error: function OnErrorCall(response) {
                alert(response.status + " " + response.statusText);
            }
        });
        });

        $('#txtDOS').datetimepicker({
            format: 'd-M-Y H:i',
            step: 1,
            theme: 'dark'
        });

        $('#txtCDATI').datetimepicker({
            format: 'd-M-Y H:i',
            step: 1,
            theme: 'dark'
        });

        
        $('#txtHMR').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtSTYPE').focus();
                e.preventDefault();
                var newhmr = $('#txtHMR').val();
                var oldhmr = $('#txtPOPCHMR').val();
                var ldt = new Date($('#txtPOPCHMD').val());
                var ndt = new Date($('#txtCDATI').val());
                if (newhmr <= oldhmr)
                {
                    alert("LAST PM / CM HMR IS GREATER THEN THE CURRENT HMR! PLEASE REVIEW");
                    $('#txtHMR').focus();
                }
                if (ndt <= ldt)
                {
                    alert("LAST PM / CM DATE IS GREATER THEN THE CURRENT DATE! PLEASE REVIEW");
                    $('#txtCDATI').focus();
                }
            }
        });

        $('#txtSTYPE').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtTTR').focus();
                e.preventDefault();
                var date1 = new Date($('#txtDOS').val())
                var date2 =new Date($('#txtCDATI').val())
                var difference_ms = date2 - date1;
                difference_ms = difference_ms / 1000;
                var seconds = Math.floor(difference_ms % 60);
                difference_ms = difference_ms / 60;
                var minutes = Math.floor(difference_ms % 60);
                difference_ms = difference_ms / 60;
                var hours = Math.floor(difference_ms % 24);
                var days = Math.floor(difference_ms / 24);
                var one_day = 1000 * 60 * 60 * 24;
                var difference_ms1 = date2 - date1;
                var day1 = difference_ms1 / one_day;
                var tval = day1 * 24;
                $('#txtTTR').val(tval.toFixed(0));
                switch (true) {
                    case (tval >= 72):
                        $('#txtTSLOT').val(">72");
                        break;
                    case (tval >= 48):
                        $('#txtTSLOT').val("48-72");
                        break;
                    case (tval >= 24):
                        $('#txtTSLOT').val("24-48");
                        break;
                    case (tval >= 10):
                        $('#txtTSLOT').val("10-24");
                        break;
                    default:
                        $('#txtTSLOT').val("0-10");
                }

                var hm =$('#txtHMR').val();
                switch (true) {
                    case (hm >= 15000):
                        $('#txtHMAGE').val(">15000");
                        break;
                    case (hm >= 12500):
                        $('#txtHMAGE').val("12500-15000");
                        break;
                    case (hm >= 10000):
                        $('#txtHMAGE').val("10000-12500");
                        break;
                    case (hm >= 7500):
                        $('#txtHMAGE').val("7500-10000");
                        break;
                    case (hm >= 5000):
                        $('#txtHMAGE').val("5000-7500");
                        break;
                    case (hm >= 2500):
                        $('#txtHMAGE').val("2500-5000");
                        break;
                    default:
                        $('#txtHMAGE').val("0-2500");
                }
            }
        });

        $('#txtTTR').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtTSLOT').focus();
                e.preventDefault();
                var stp = $('#txtSTYPE').val();
                if (stp == "OIL SERVICE") {
                    var rat = $('#txtKVA').val();
                    switch (rat) {
                        case '7.5':
                            $('#txtMETERIAL').val("1)LUBE OIL 7.5 LTR , 2)LUBE OIL FILTER 1 NOS , 3)FUEL FILTER 1 NOS");
                            break;
                        case '10':
                            $('#txtMETERIAL').val("1)LUBE OIL 7.5 LTR , 2)LUBE OIL FILTER 1 NOS , 3)FUEL FILTER 1 NOS");
                            break;
                        case '15':
                            $('#txtMETERIAL').val("1)LUBE OIL 8 LTR , 2)LUBE OIL FILTER 1 NOS , 3)FUEL FILTER 2 NOS");
                            break;
                        case '20':
                            $('#txtMETERIAL').val("1)LUBE OIL 9.5 LTR , 2)LUBE OIL FILTER 1 NOS , 3)FUEL FILTER 2 NOS");
                            break;
                        case '25':
                            $('#txtMETERIAL').val("1)LUBE OIL 9.5 LTR , 2)LUBE OIL FILTER 1 NOS , 3)FUEL FILTER 2 NOS");
                            break;
                        case '30':
                            $('#txtMETERIAL').val("1)LUBE OIL 9.5 LTR , 2)LUBE OIL FILTER 1 NOS , 3)FUEL FILTER 2 NOS");
                            break;
                        case '35':
                            $('#txtMETERIAL').val("1)LUBE OIL 9.5 LTR , 2)LUBE OIL FILTER 1 NOS , 3)FUEL FILTER 2 NOS");
                            break;
                        case '40':
                            $('#txtMETERIAL').val("1)LUBE OIL 8 LTR , 2)LUBE OIL FILTER 1 NOS , 3)FUEL FILTER 2 NOS");
                            break;
                        case '50':
                            $('#txtMETERIAL').val("1)LUBE OIL 8 LTR , 2)LUBE OIL FILTER 1 NOS , 3)FUEL FILTER 2 NOS");
                            break;
                        case '62.5':
                            $('#txtMETERIAL').val("1)LUBE OIL 8 LTR , 2)LUBE OIL FILTER 1 NOS , 3)FUEL FILTER 2 NOS");
                            break;
                        default:
                            $('#txtMETERIAL').val("FILL THE DATA MANUALLY");
                            break;
                    }
                    $('#txtCCATE').val("ENGINE");
                    $('#txtCNAT').val("NA");
                    $('#txtSERV').val("NA");
                    $('#txtSTA').val("CLOSED");
                    $('#txtACTION').val("SERVICING DONE");
                    $('#txtRFAIL').val("NA");
                }
            }
        });

        $('#txtTSLOT').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtMETERIAL').focus();
                e.preventDefault();
            }
        });

        $('#txtMETERIAL').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtHMAGE').focus();
                e.preventDefault();
            }
        });

        $('#txtHMAGE').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtCCATE').focus();
                e.preventDefault();
            }
        });

        $('#txtCCATE').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtCNAT').focus();
                e.preventDefault();
            }
        });

        $('#txtCNAT').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtSERV').focus();
                e.preventDefault();
            }
        });

        $('#txtSERV').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtSTA').focus();
                e.preventDefault();
            }
        });

        $('#txtSTA').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtRFAIL').focus();
                e.preventDefault();
                var ser = $('#txtSERV').val();
                var tt = $('#txtTTR').val();
                if (ser == "MAJOR")
                {
                    switch (true) {
                        case (tt > 12):
                            $('#txtSLA').val("OUT OF SLA");
                            break;
                        default:
                            $('#txtSLA').val("WITHIN SLA");
                            $('#txtRESLA').val("NA");
                            break;
                    }
                }
                else
                {
                    switch (true) {
                        case (tt > 6):
                            $('#txtSLA').val("OUT OF SLA");
                            break;
                        default:
                            $('#txtSLA').val("WITHIN SLA");
                            $('#txtRESLA').val("NA");
                            break;
                    }
                }
            }
        });

        $('#txtRFAIL').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtACTION').focus();
                $('#txtDPCODE').val("A1587");
                e.preventDefault();
            }
        });

        $('#txtACTION').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtREPORT').focus();
                e.preventDefault();
            }
        });

        $('#txtREPORT').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtTECHNICIAN').focus();
                e.preventDefault();
            }
        });

        $('#txtTECHNICIAN').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtSLA').focus();
                e.preventDefault();
            }
        });

        $('#txtREM').focus(function (e) {
            var chmd = new Date($('#txtPOPCHMD1').val());
            var chmr = $('#txtPOPCHMR1').val();
            if (chmd == "") {
                alert("BLANK");
            }
            else {
                var start = new Date($('#txtCDATI').val());
                var diff = new Date(start - chmd);
                var days = diff / 1000 / 60 / 60 / 24;
                var difhm = $('#txtHMR').val() - chmr;
                var ahm = difhm / days;
                var xy = 500 / ahm;
                var styp = $('#txtSTYPE').val();
                if (xy >= 180) {
                    $('#txtAHM').val(ahm);
                    $('#txtPOPCHMR').val($('#txtHMR').val());
                    $('#txtPOPCHMD').val($('#txtCDATI').val());
                    start.setDate(start.getDate() + 180);
                    if (styp == 'OIL SERVICE') {
                        $('#txtPOPLHMR').val($('#txtHMR').val());
                        $('#txtPOPLSD').val($('#txtCDATI').val());
                        $('#txtNSD').val(start);
                        $('#txtPOPNSD').val(start);
                    }
                }
                else {
                    $('#txtAHM').val(ahm);
                    $('#txtPOPCHMR').val($('#txtHMR').val());
                    $('#txtPOPCHMD').val($('#txtCDATI').val());
                    start.setDate(start.getDate() + xy);
                    if (styp == 'OIL SERVICE') {
                        $('#txtPOPLHMR').val($('#txtHMR').val());
                        $('#txtPOPLSD').val($('#txtCDATI').val());
                        $('#txtNSD').val(start);
                        $('#txtPOPNSD').val(start);
                    }
                }
            }
        });

        $('#txtSLA').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtRESLA').focus();
                e.preventDefault();
            }
        });

        $('#txtRESLA').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtREM').focus();
                e.preventDefault();
            }
        });

        $('#txtREM').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtNSD').focus();
                e.preventDefault();
            }
        });

        $('#txtNSD').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#txtDPCODE').focus();
                e.preventDefault();
            }
        });

        $('input:text:first').focus();
        var $inp = $('input:text');
        $inp.bind('keydown', function (e) {
            //var key = (e.keyCode ? e.keyCode : e.charCode);
            var key = e.which;
            if (key == 27) {
                e.preventDefault();
                var nxtIdx = $inp.index(this) + 1;
                $(":input:text:eq(" + nxtIdx + ")").focus();
            }
        });

    });
    </script>
        }
<style type="text/css">
    .input-xs {
        height: 22px;
        padding: 2px 5px;
        font-size: 12px;
        line-height: 1.5;
        border-radius: 3px;
    }

    .focus {
        border: 2px solid red;
        background-color: #FEFED5;
    }
    .custom-date-style {
	background-color: red !important;
}
</style>
@Scripts.Render("~/bundles/jqueryval")
@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <h6>ADD NEW ISSUE FOR SITE: &nbsp; @Html.DisplayFor(model => model.MAINPOP.SNAME) &nbsp; @Html.ActionLink("Back to List", "List")</h6>
        <table class="table table-bordered table-hover table-responsive" style="font-size : smaller">
            <tr>
                <td>@Html.LabelFor(model => model.PMRs.recid)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.recid, new { @class = "form-control input-xs", @id = "txtRID" })
                    @Html.ValidationMessageFor(model => model.PMRs.recid)
                </td>
                <td>@Html.LabelFor(model => model.PMRs.CUST)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.CUST, new { @class = "form-control input-xs", @id = "txtCUST" })
                    @Html.ValidationMessageFor(model => model.PMRs.CUST)
                </td>
                <td>@Html.LabelFor(model => model.PMRs.CCATE)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.CCATE, new { @class = "form-control input-xs", @id = "txtCCATE" })
                    @Html.ValidationMessageFor(model => model.PMRs.CCATE)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.PMRs.ENGINE_No)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.ENGINE_No, new { @class = "form-control input-xs", @id = "txtENS" })
                    @Html.ValidationMessageFor(model => model.PMRs.ENGINE_No)
                </td>
                <td>@Html.LabelFor(model => model.PMRs.DOI)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.DOI, new { @class = "form-control input-xs", @id = "txtDOI" })
                    @Html.ValidationMessageFor(model => model.PMRs.DOI)
                </td>
                <td>@Html.LabelFor(model => model.PMRs.CNAT)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.CNAT, new { @class = "form-control input-xs", @id = "txtCNAT" })
                    @Html.ValidationMessageFor(model => model.PMRs.CNAT)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.PMRs.SNAME)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.SNAME, new { @class = "form-control input-xs", @id = "txtSNAME" })
                    @Html.ValidationMessageFor(model => model.PMRs.SNAME)
                </td>
                <td>@Html.LabelFor(model => model.PMRs.WARR)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.WARR, new { @class = "form-control input-xs", @id = "txtWARR" })
                    @Html.ValidationMessageFor(model => model.PMRs.WARR)
                </td>
                <td>@Html.LabelFor(model => model.PMRs.SERV)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.SERV, new { @class = "form-control input-xs", @id = "txtSERV" })
                    @Html.ValidationMessageFor(model => model.PMRs.SERV)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.PMRs.SID)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.SID, new { @class = "form-control input-xs", @id = "txtSID" })
                    @Html.ValidationMessageFor(model => model.PMRs.SID)
                </td>
                <td>@Html.LabelFor(model => model.PMRs.OEA)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.OEA, new { @class = "form-control input-xs", @id = "txtOEA" })
                    @Html.ValidationMessageFor(model => model.PMRs.OEA)
                </td>
                <td>@Html.LabelFor(model => model.PMRs.STA)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.STA, new { @class = "form-control input-xs", @id = "txtSTA" })
                    @Html.ValidationMessageFor(model => model.PMRs.STA)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.PMRs.DGNO)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.DGNO, new { @class = "form-control input-xs", @id = "txtDGNO" })
                    @Html.ValidationMessageFor(model => model.PMRs.DGNO)
                </td>
                <td>@Html.LabelFor(model => model.PMRs.AMC)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.AMC, new { @class = "form-control input-xs", @id = "txtAMC" })
                    @Html.ValidationMessageFor(model => model.PMRs.AMC)
                </td>
                <td>@Html.LabelFor(model => model.PMRs.RFAIL)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.RFAIL, new { @class = "form-control input-xs", @id = "txtRFAIL" })
                    @Html.ValidationMessageFor(model => model.PMRs.RFAIL)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.PMRs.KVA)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.KVA, new { @class = "form-control input-xs", @id = "txtKVA" })
                    @Html.ValidationMessageFor(model => model.PMRs.KVA)
                </td>
                <td>@Html.LabelFor(model => model.PMRs.DOS)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.DOS, new { @class = "form-control input-xs", @id = "txtDOS" })
                    @Html.ValidationMessageFor(model => model.PMRs.DOS)
                </td>
                <td>@Html.LabelFor(model => model.PMRs.ACTION)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.ACTION, new { @class = "form-control input-xs", @id = "txtACTION" })
                    @Html.ValidationMessageFor(model => model.PMRs.ACTION)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.PMRs.MODEL)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.MODEL, new { @class = "form-control input-xs", @id = "txtMODEL" })
                    @Html.ValidationMessageFor(model => model.PMRs.MODEL)
                </td>
                <td>@Html.LabelFor(model => model.PMRs.CDATI)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.CDATI, new { @class = "form-control input-xs", @id = "txtCDATI" })
                    @Html.ValidationMessageFor(model => model.PMRs.CDATI)
                </td>
                <td>@Html.LabelFor(model => model.PMRs.Report)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.Report, new { @class = "form-control input-xs", @id = "txtREPORT" })
                    @Html.ValidationMessageFor(model => model.PMRs.Report)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.PMRs.AMAKE)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.AMAKE, new { @class = "form-control input-xs", @id = "txtAMAKE" })
                    @Html.ValidationMessageFor(model => model.PMRs.AMAKE)
                </td>
                <td>@Html.LabelFor(model => model.PMRs.HMR)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.HMR, new { @class = "form-control input-xs", @id = "txtHMR" })
                    @Html.ValidationMessageFor(model => model.PMRs.HMR)
                </td>
                <td>@Html.LabelFor(model => model.PMRs.Technician)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.Technician, new { @class = "form-control input-xs", @id = "txtTECHNICIAN" })
                    @Html.ValidationMessageFor(model => model.PMRs.Technician)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.PMRs.ALSN)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.ALSN, new { @class = "form-control input-xs", @id = "txtALSN" })
                    @Html.ValidationMessageFor(model => model.PMRs.ALSN)
                </td>
                <td>@Html.LabelFor(model => model.PMRs.STYPE)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.STYPE, new { @class = "form-control input-xs", @id = "txtSTYPE" })
                    @Html.ValidationMessageFor(model => model.PMRs.STYPE)
                </td>
                <td>@Html.LabelFor(model => model.PMRs.SLA)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.SLA, new { @class = "form-control input-xs", @id = "txtSLA" })
                    @Html.ValidationMessageFor(model => model.PMRs.SLA)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.PMRs.BSN)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.BSN, new { @class = "form-control input-xs", @id = "txtBSN" })
                    @Html.ValidationMessageFor(model => model.PMRs.BSN)
                </td>
                <td>@Html.LabelFor(model => model.PMRs.TTR)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.TTR, new { @class = "form-control input-xs", @id = "txtTTR" })
                    @Html.ValidationMessageFor(model => model.PMRs.TTR)
                </td>
                <td>@Html.LabelFor(model => model.PMRs.RESLA)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.RESLA, new { @class = "form-control input-xs", @id = "txtRESLA" })
                    @Html.ValidationMessageFor(model => model.PMRs.RESLA)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.PMRs.DIST)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.DIST, new { @class = "form-control input-xs", @id = "txtDIST" })
                    @Html.ValidationMessageFor(model => model.PMRs.DIST)
                </td>
                <td>@Html.LabelFor(model => model.PMRs.TSLOT)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.TSLOT, new { @class = "form-control input-xs", @id = "txtTSLOT" })
                    @Html.ValidationMessageFor(model => model.PMRs.TSLOT)
                </td>
                <td>@Html.LabelFor(model => model.PMRs.REM)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.REM, new { @class = "form-control input-xs", @id = "txtREM" })
                    @Html.ValidationMessageFor(model => model.PMRs.REM)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.PMRs.STATE)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.STATE, new { @class = "form-control input-xs", @id = "txtSTATE" })
                    @Html.ValidationMessageFor(model => model.PMRs.STATE)
                </td>
                <td>@Html.LabelFor(model => model.PMRs.METERIAL)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.METERIAL, new { @class = "form-control input-xs", @id = "txtMETERIAL" })
                    @Html.ValidationMessageFor(model => model.PMRs.METERIAL)
                </td>
                <td>@Html.LabelFor(model => model.MAINPOP.nsd)</td>
                <td>
                    @Html.TextBoxFor(model => model.MAINPOP.nsd, new { @class = "form-control input-xs", @id = "txtNSD" })
                    @Html.ValidationMessageFor(model => model.MAINPOP.nsd)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.MAINPOP.ahm)</td>
                <td>
                    @Html.TextBoxFor(model => model.MAINPOP.ahm, new { @class = "form-control input-xs", @id = "txtAHM" })
                    @Html.ValidationMessageFor(model => model.MAINPOP.ahm)
                </td>
                <td>@Html.LabelFor(model => model.MAINPOP.hmage)</td>
                <td>
                    @Html.TextBoxFor(model => model.MAINPOP.hmage, new { @class = "form-control input-xs", @id = "txtHMAGE" })
                    @Html.ValidationMessageFor(model => model.MAINPOP.hmage)
                </td>
                <td>@Html.LabelFor(model => model.PMRs.DPCODE)</td>
                <td>
                    @Html.TextBoxFor(model => model.PMRs.DPCODE, new { @class = "form-control input-xs", @id = "txtDPCODE" })
                    @Html.ValidationMessageFor(model => model.PMRs.DPCODE)
                </td>
            </tr>
            @Html.HiddenFor(model => model.PMRs.AEDT, new { @id = "txtAEDT" })
            @Html.HiddenFor(model => model.PMRs.lmodi, new { @id = "txtLMODI" })
            @Html.HiddenFor(model => model.PMRs.SSTA, new { @id = "txtSSTA" })
            @Html.HiddenFor(model => model.MAINPOP.RID)
            @Html.HiddenFor(model => model.MAINPOP.lsd, new { @id = "txtPOPLSD" })
            @Html.HiddenFor(model => model.MAINPOP.lhmr, new { @id = "txtPOPLHMR" })
            @Html.HiddenFor(model => model.MAINPOP.CHMD, new { @id = "txtPOPCHMD" })
            @Html.HiddenFor(model => model.MAINPOP.CHMR, new { @id = "txtPOPCHMR" })
            @Html.HiddenFor(model => model.MAINPOP.CHMD, new { @id = "txtPOPCHMD1" })
            @Html.HiddenFor(model => model.MAINPOP.CHMR, new { @id = "txtPOPCHMR1" })
            @Html.HiddenFor(model => model.MAINPOP.nsd, new { @id = "txtPOPNSD" })
            @Html.HiddenFor(model => model.MAINPOP.lmodi, new { @id = "txtPOPLMODI" })
            @Html.HiddenFor(model => model.MAINPOP.AEDT, new { @id = "txtPOPAEDT" })
            @Html.HiddenFor(model => model.MAINPOP.SSTA, new { @id = "txtPOPSSTA" })
            @Html.HiddenFor(model => model.MAINPOP.ENS, new { @id = "txtPOPENS" })

            @Html.HiddenFor(model => model.MAINPOP.RID1)

            @Html.HiddenFor(model => model.MAINPOP.RAT_PH)

            @Html.HiddenFor(model => model.MAINPOP.cntype)

            @Html.HiddenFor(model => model.MAINPOP.CNAME)

            @Html.HiddenFor(model => model.MAINPOP.PHASE)

            @Html.HiddenFor(model => model.MAINPOP.cnmake)

            @Html.HiddenFor(model => model.MAINPOP.SNAME)

            @Html.HiddenFor(model => model.MAINPOP.MODEL)

            @Html.HiddenFor(model => model.MAINPOP.sauto)

            @Html.HiddenFor(model => model.MAINPOP.SID)

            @Html.HiddenFor(model => model.MAINPOP.ADDR)

            @Html.HiddenFor(model => model.MAINPOP.DGNO)

            @Html.HiddenFor(model => model.MAINPOP.DIST)

            @Html.HiddenFor(model => model.MAINPOP.AMAKE)

            @Html.HiddenFor(model => model.MAINPOP.STATE)

            @Html.HiddenFor(model => model.MAINPOP.ALSN)

            @Html.HiddenFor(model => model.MAINPOP.CPN)

            @Html.HiddenFor(model => model.MAINPOP.FRAME)

            @Html.HiddenFor(model => model.MAINPOP.PHNO)

            @Html.HiddenFor(model => model.MAINPOP.BSN)

            @Html.HiddenFor(model => model.MAINPOP.SPIN)

            @Html.HiddenFor(model => model.MAINPOP.OEA)

            @Html.HiddenFor(model => model.MAINPOP.llop)

            @Html.HiddenFor(model => model.MAINPOP.hmage)

            @Html.HiddenFor(model => model.MAINPOP.DOC, new { @id = "txtPOPDOC" })

            @Html.HiddenFor(model => model.MAINPOP.solenoid)

            @Html.HiddenFor(model => model.MAINPOP.ahm)

            @Html.HiddenFor(model => model.MAINPOP.AMC)

            @Html.HiddenFor(model => model.MAINPOP.chalt)

            @Html.HiddenFor(model => model.MAINPOP.DSTA)

            @Html.HiddenFor(model => model.MAINPOP.WARR)

            @Html.HiddenFor(model => model.MAINPOP.starter)

            @Html.HiddenFor(model => model.MAINPOP.ACTION)

            @Html.HiddenFor(model => model.MAINPOP.DPCODE)
        </table>
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
</div>

